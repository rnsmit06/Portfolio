--RYAN SMITH, A9

--Decrease in balance
UPDATE DETAILRENTAL
SET Detail_ReturnDate = Detail_ReturnDate - 7 
WHERE RENT_NUM = 1006 OR RENT_NUM = 1007

--Increase in balance
UPDATE DETAILRENTAL
SET Detail_DueDate = Detail_DueDate - 2
WHERE RENT_NUM = 1006 OR RENT_NUM = 1007

--No change in balance
UPDATE DETAILRENTAL
SET Detail_DueDate = Detail_DueDate
WHERE RENT_NUM = 1007

CREATE TRIGGER [dbo].[A9]
ON	[dbo].[DETAILRENTAL]
AFTER UPDATE 
AS
BEGIN
	DECLARE @CHANGE_IN_BALANCE DECIMAL	
	DECLARE @RENT_NUM INT 
	DECLARE @MEM_NUM INT
	DECLARE @VID_NUM INT


	--UPDATE CASE
	IF(EXISTS(SELECT * FROM INSERTED) AND EXISTS(SELECT * FROM DELETED))
	BEGIN
		--LOGIC TO HANDLE RECORDS IN UPDATE CASE
		DECLARE UPDATED_CURSOR CURSOR FOR
		SELECT	I.RENT_NUM, I.VID_NUM, 
				DATEDIFF(DAY,I.DETAIL_DUEDATE,I.DETAIL_RETURNDATE)*I.Detail_DailyLateFee - 
				ISNULL(DATEDIFF(DAY,D.DETAIL_DUEDATE,D.DETAIL_RETURNDATE)*D.Detail_DailyLateFee, 0) AS 'CHANGE_IN_BALANCE'
		FROM	DELETED D INNER JOIN INSERTED I ON D.RENT_NUM = I.Rent_Num	
		GROUP BY I.RENT_NUM, I.Vid_Num, I.Detail_DueDate, I.Detail_ReturnDate, 
		I.Detail_DailyLateFee, D.Detail_DueDate, D.Detail_ReturnDate, D.Detail_DailyLateFee
		
		OPEN	UPDATED_CURSOR
		FETCH NEXT FROM UPDATED_CURSOR 
			INTO @RENT_NUM, @VID_NUM, @CHANGE_IN_BALANCE
		WHILE(@@FETCH_STATUS = 0)
		BEGIN
			UPDATE MEMBERSHIP
			SET Mem_Balance = Mem_Balance + @CHANGE_IN_BALANCE
			WHERE MEM_NUM IN (SELECT MEM_NUM FROM RENTAL WHERE RENT_NUM = @RENT_NUM)
			FETCH NEXT FROM UPDATED_CURSOR
			INTO @RENT_NUM, @VID_NUM, @CHANGE_IN_BALANCE
		END
		CLOSE UPDATED_CURSOR
		DEALLOCATE UPDATED_CURSOR
	END
END