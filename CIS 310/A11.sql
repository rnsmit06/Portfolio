--Ryan Smith
--A11, 4/19/2017

--70
ALTER TABLE VIDEO
ADD VID_STATUS CHAR(4) NOT NULL DEFAULT 'IN' CHECK (VID_STATUS IN ('IN','OUT','LOST'))

--71
UPDATE VIDEO
SET VID_STATUS = 'OUT'
WHERE VID_NUM IN (SELECT DETAILRENTAL.Vid_Num
				  FROM DETAILRENTAL INNER JOIN VIDEO ON DETAILRENTAL.Vid_Num = VIDEO.Vid_Num
				  WHERE Detail_ReturnDate IS NULL)
--72
ALTER TABLE PRICE
ADD PRICE_RENTDAYS INt NOT NULL DEFAULT 3 CHECK (PRICE_RENTDAYS BETWEEN 0 AND 99)

--73
UPDATE PRICE
SET PRICE_RENTDAYS = 5
WHERE PRICE_CODE IN (1,3)

UPDATE PRICE
SET PRICE_RENTDAYS = 3
WHERE PRICE_CODE = 2

UPDATE PRICE
SET PRICE_RENTDAYS = 7
WHERE PRICE_CODE = 4

--78
CREATE PROCEDURE PRC_NEW_DETAIL
	@VID_NUM INT,
	@RENT_NUM INT
AS
BEGIN
	IF(@VID_NUM IN(SELECT VID_NUM FROM VIDEO) AND @RENT_NUM IN(SELECT RENT_NUM FROM DETAILRENTAL))
	BEGIN 
		IF((SELECT VID_STATUS FROM VIDEO WHERE VID_NUM = @VID_NUM) = 'IN')
		BEGIN
			DECLARE @PRICE_RENTFEE DECIMAL(5,2)
			DECLARE @PRICE_DAILYLATEFEE DECIMAL(5,2)
			DECLARE @PRICE_RENTDAYS INT

			SET @PRICE_RENTFEE = (SELECT Price_RentFee
			  FROM PRICE P INNER JOIN MOVIE M ON M.Price_Code = P.Price_Code 
			  INNER JOIN VIDEO V ON V.Movie_Num = M.Movie_Num
			  WHERE VID_NUM = @VID_NUM)
			SET @PRICE_DAILYLATEFEE = (SELECT Price_DailyLateFee
			  FROM PRICE P INNER JOIN MOVIE M ON M.Price_Code = P.Price_Code 
			  INNER JOIN VIDEO V ON V.Movie_Num = M.Movie_Num
			  WHERE VID_NUM = @VID_NUM)
			SET @PRICE_RENTDAYS = (SELECT Price_RENTDAYS
			  FROM PRICE P INNER JOIN MOVIE M ON M.Price_Code = P.Price_Code 
			  INNER JOIN VIDEO V ON V.Movie_Num = M.Movie_Num
			  WHERE VID_NUM = @VID_NUM)

			DECLARE @DUEDATE DATETIME
			SET @DUEDATE = @PRICE_RENTDAYS + GETDATE()
			INSERT INTO DETAILRENTAL
			VALUES(@RENT_NUM, @VID_NUM, @PRICE_RENTFEE, @DUEDATE, NULL, @PRICE_DAILYLATEFEE)
		END
		ELSE
		PRINT('THE VIDEOS RETURN MUST BE ENTERED BEFORE IT CAN BE RENTED AGAIN.')

	END
	ELSE
	PRINT('THE PROVIDED VIDEO NUMBER OR RENT NUMBER WAS NOT VALID')

END
GO

--79
CREATE PROCEDURE PRC_RETURN_VIDEO
	@VID_NUM INT
AS
BEGIN
	IF(@VID_NUM IN(SELECT VID_NUM FROM VIDEO))
	BEGIN

		IF((SELECT COUNT(*)
			FROM DETAILRENTAL
			WHERE VID_NUM = @VID_NUM AND DETAIL_RETURNDATE IS NULL) > 1)
		PRINT('THE VIDEO HAS MULTIPLE OUTSTANDING RENTALS')

		ELSE IF((SELECT COUNT(*)
			     FROM DETAILRENTAL
				 WHERE VID_NUM = @VID_NUM AND DETAIL_RETURNDATE IS NULL) = 1)
		BEGIN
			UPDATE DETAILRENTAL
			SET Detail_ReturnDate = GETDATE()
			WHERE VID_NUM = @VID_NUM
			UPDATE VIDEO
			SET VID_STATUS = 'IN'
			WHERE VID_NUM = @VID_NUM
			PRINT('THE VIDEO HAS NO OUTSTANDING RENTALS AND IS NOW AVAILABLE FOR RENTAL')
		END

		ELSE
			BEGIN
				UPDATE VIDEO
				SET VID_STATUS = 'IN'
				WHERE VID_NUM = @VID_NUM
			END
	END
	ELSE
	PRINT('THE PROVIDED VIDEO NUMBER WAS NOT VALID')
END
GO


